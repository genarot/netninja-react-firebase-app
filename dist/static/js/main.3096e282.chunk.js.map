{"version":3,"sources":["constants/routes.js","store/actions/authActions.js","store/actions/types.js","components/layouts/SignedInLinks.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashborard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashborard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProjects.js","store/actions/projectActions.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","store/Store.js","App.js","serviceWorker.js","index.js"],"names":["HOME","PROJECT_DETAIL","SIGN_IN","SIGN_UP","PROJECT_CREATE","clearAuthErrror","dispatch","type","connect","signOut","getState","_ref3","getFirebase","auth","then","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","isAuth","uid","Link","layouts_SignedInLinks","layouts_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","zone","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashborard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","target","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","signInWithEmailAndPassword","catch","err","stop","_x","_x2","_x3","apply","arguments","SignUp","firstName","lastName","signUpAction","name","newUser","_ref5","_callee2","_ref4","getFirestore","_context2","createUserWithEmailAndPassword","resp","doc","set","_x4","_x5","_x6","CreateProjects","createProject","error","message","authorId","add","objectSpread","Date","result","payload","initState","authReducer","length","undefined","action","projectReducer","toConsumableArray","_action$err","code","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","middleWare","thunk","withExtraArgument","store","createStore","applyMiddleware","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","window","__REDUX_DEVTOOLS_EXTENSION__","App","loadingAuth","renderPage","Fragment","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","routes","component","ProjectDetails","_this2","unSubscribeAuthStateChanged","firebaseAuthIsReady","es","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sQAAaA,EAAO,IACPC,EAAiB,eACjBC,EAAe,UACfC,EAAe,UACfC,EAAgB,0CCwBhBC,EAAkB,kBAAM,SAACC,GAClCA,EAAS,CACLC,KCtBwB,uBCoBjBC,cAAQ,KAAM,CAACC,QFXP,kBAAO,SAACH,EAAUI,EAAXC,IACTC,EAD+CD,EAAhBC,eAGvCC,OAAOJ,UACfK,KAAM,WACHR,EAAS,CACLC,KCdkB,yBCmBfC,CApBO,SAACO,GACnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAIjB,GAAb,gBAEJY,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMN,SAAlB,YAEJO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAIrB,EAAMmB,UAAU,mCAC5BJ,EAAMQ,QAAQC,cCFhBC,EAbQ,WACnB,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAIlB,GAAb,WAEJa,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAInB,GAAb,YCuBDM,kBATf,SAA0BkB,GAGtB,OADAC,QAAQC,IAAI,SAASF,GACd,CACHb,KAAMa,EAAMG,SAAShB,KACrBU,QAASG,EAAMG,SAASN,UAIQ,KAAzBf,CAzBA,SAACO,GAAU,IACfF,EAAkBE,EAAlBF,KAAMU,EAAYR,EAAZQ,QAEPO,EAAUjB,EAAKkB,IACrB,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAIrB,EAAMmB,UAAU,cAA1B,cAEHW,EACDd,EAAAC,EAAAC,cAACe,EAAD,CAAeV,QAASA,IACxBP,EAAAC,EAAAC,cAACgB,EAAD,qDCWGC,EA5BO,SAACpB,GAAU,IACtBqB,EAAiBrB,EAAjBqB,cACP,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACViB,GAAiBA,EAAcC,IAAI,SAAAC,GAChC,OACItB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKD,EAAKE,IACXxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAamB,EAAKG,MAClCzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAOoB,EAAKI,SACZ1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACdwB,IAAOL,EAAKM,KAAKC,UAAUC,KAAK,mBAAmBC,mBCHvEC,EAbQ,SAACjC,GAAU,IACvBkC,EAAWlC,EAAXkC,QACP,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc8B,EAAQC,OACtClC,EAAAC,EAAAC,cAAA,sBAAc+B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAawB,IAAOM,EAAQI,UAAUR,UAAUC,KAAK,mBAAmBQ,eCWtFC,EAjBK,SAACxC,GAAU,IACpByC,EAAYzC,EAAZyC,SACP,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVqC,GAAYA,EAASnB,IAAI,SAAAY,GAGtB,OAFAtB,QAAQC,IAAIqB,GAGJjC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMO,IAAKU,EAAQT,GAAInB,GAAE,YAAAoC,OAAcR,EAAQT,KAC3CxB,EAAAC,EAAAC,cAACwC,EAAD,CAAgBT,QAASA,kCCA/CU,6MACFjC,MAAQ,CACJ8B,SAAU,4EAEL,IAAAI,EACmCC,KAAK9C,MAAtCyC,EADFI,EACEJ,SAAU3C,EADZ+C,EACY/C,KAAMuB,EADlBwB,EACkBxB,cACvB,OAAMvB,EAAKkB,IAGPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAC4C,EAAD,CAAaN,SAAUA,KAE3BxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAC6C,EAAD,CAAe3B,cAAeA,OAVtBpB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAInB,WANtB+D,aAiCTC,cACX1D,YAVoB,SAACkB,GAErB,MAAO,CACH8B,SAAU9B,EAAMyC,UAAUC,QAAQZ,SAClCpB,cAAcV,EAAMyC,UAAUC,QAAQhC,cACtCvB,KAAMa,EAAMG,SAAShB,OAKA,MACzBwD,2BAAiB,CACb,CAACC,WAAW,WAAYC,QAAS,CAAC,YAAa,SAC/C,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAO,WAJlDL,CAMZP,GCCYO,cACX1D,YAdoB,SAAEkB,EAAO+C,GAC7B9C,QAAQC,IAAI,QAAQF,GACpB,IAAMc,EAAYiC,EAASC,MAAMC,OAAOnC,GAClCgB,EAAY9B,EAAMyC,UAAUS,KAAKpB,SAIvC,OAHA7B,QAAQC,IAAI4B,GAGL,CACHP,QAHcO,EAAYA,EAAShB,GAAM,KAIzC3B,KAAMa,EAAMG,SAAShB,OAKA,MACzBwD,2BAAiB,CACb,CAACC,WAAY,cAHNJ,CA1CQ,SAACnD,GAAQ,IACjBkC,EAAiBlC,EAAjBkC,QAEP,OAFwBlC,EAARF,KAELkB,IAENkB,EAEQjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc8B,EAAQC,OACtClC,EAAAC,EAAAC,cAAA,SAAK+B,EAAQP,UAEjB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAgB+B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDpC,EAAAC,EAAAC,cAAA,WAAMyB,IAAOM,EAAQI,UAAUR,UAAUC,KAAK,mBAAmBQ,eAOjFtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,gCApBYF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAInB,cCNxC2E,6MACFnD,MAAU,CACNoD,MAAM,GACNC,SAAS,MAGbC,aAAe,SAACC,GACZtD,QAAQC,IAAIqD,EAAEC,OAAOC,OACrBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKL,EAAEC,OAAO1C,GAAIyC,EAAEC,OAAOC,WAG/BK,aAAe,SAACP,GACZtD,QAAQC,IAAI,gBACZqD,EAAEQ,iBACFL,EAAKrE,MAAM2E,OAAON,EAAK1D,8FAIvBmC,KAAK9C,MAAMV,mDAEN,IAAAuD,EACqBC,KAAK9C,MAAxB4E,EADF/B,EACE+B,UAEP,OAHK/B,EACa/C,KAERkB,IAAaf,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAIrB,IAErCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,QAAQiC,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAElDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,WAAYiC,GAAG,WAAWsD,SAAUjC,KAAKmB,gBAEzDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACTwE,EAAY3E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcwE,GAAiB,eAzCzD1B,aAwDNzD,cAPU,SAACkB,GACtB,MAAM,CACFiE,UAAWjE,EAAMb,KAAK8E,UACtB9E,KAAMa,EAAMG,SAAShB,OAIW,CAAC6E,OV9DnB,SAAEK,GAAF,sBAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,EAAAjF,EAAAkF,KAAoB,SAAAC,EAAO9F,EAAUI,EAAjB2F,GAAA,OAAAH,EAAAjF,EAAAqF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QAA2B7F,EAA3ByF,EAA2BzF,eAGxDC,OAAO6F,2BACZX,EAAYjB,MACZiB,EAAYhB,UAEfjE,KAAM,WACHR,EAAS,CAACC,KCJY,oBDMzBoG,MAAM,SAACC,GACJtG,EAAS,CAACC,KCNY,cDMOqG,UAXK,wBAAAL,EAAAM,SAAAT,EAAAvC,SAApB,gBAAAiD,EAAAC,EAAAC,GAAA,OAAAhB,EAAAiB,MAAApD,KAAAqD,YAAA,IU8D2B7G,mBAAlCG,CAAoDqE,GCxD7DsC,6MACFzF,MAAU,CACNoD,MAAM,GACNC,SAAS,GACTqC,UAAU,GACVC,SAAS,MAGbrC,aAAe,SAACC,GACZtD,QAAQC,IAAIqD,EAAEC,OAAOC,OACrBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKL,EAAEC,OAAO1C,GAAIyC,EAAEC,OAAOC,WAG/BK,aAAe,SAACP,GACZtD,QAAQC,IAAI,gBAEZwD,EAAKrE,MAAMuG,aAAalC,EAAK1D,OAC7BuD,EAAEQ,wGAIF5B,KAAK9C,MAAMV,mDAEN,IAAAuD,EACqBC,KAAK9C,MAAxBF,EADF+C,EACE/C,KAAM8E,EADR/B,EACQ+B,UACb,OAAK9E,EAAKkB,IAAaf,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAIrB,IAErCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,QAAQiC,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAElDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,WAAYiC,GAAG,WAAWsD,SAAUjC,KAAKmB,gBAEzDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,aAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOgH,KAAK,YAAYzB,SAAUjC,KAAKmB,aAAcxC,GAAG,eAExExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOgH,KAAK,WAAWzB,SAAUjC,KAAKmB,aAAcxC,GAAG,cAEvExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAiB,eAnDjC1B,aAkENzD,cAPS,SAAEkB,GACtB,MAAO,CACHb,KAAMa,EAAMG,SAAShB,KACrB8E,UAAWjE,EAAMb,KAAK8E,YAIS,CAAC2B,aXzClB,SAACE,GAAD,sBAAAC,EAAAnC,OAAAW,EAAA,EAAAX,CAAAY,EAAAjF,EAAAkF,KAAa,SAAAuB,EAAOpH,EAAUI,EAAjBiH,GAAA,IAAA/G,EAAAgH,EAAA/F,EAAAsC,EAAA,OAAA+B,EAAAjF,EAAAqF,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAA4B7F,EAA5B+G,EAA4B/G,YAAagH,EAAzCD,EAAyCC,aAClE/F,EAAWjB,IACXuD,EAAWyD,IAFcC,EAAApB,KAAA,EAIzB5E,EAAShB,OAAOiH,+BAClBN,EAAQ1C,MACR0C,EAAQzC,UAEXjE,KAAK,SAACiH,GACH,OAAQ5D,EAAUG,WAAW,SAAS0D,IAAID,EAAKtF,KAAKV,KAAKkG,IAAI,CACzDb,UAAWI,EAAQJ,UACnBC,SAAYG,EAAQH,SACpB7F,SAAYgG,EAAQJ,UAAU,GAAKI,EAAQH,SAAS,OAG3DvG,KAAK,WACFR,EAAS,CACLC,KCvCkB,qBD0CzBoG,MAAM,SAACC,GACNtG,EAAS,CACLC,KC3CoB,eD4CpBqG,UAvByB,wBAAAiB,EAAAhB,SAAAa,EAAA7D,SAAb,gBAAAqE,EAAAC,EAAAC,GAAA,OAAAX,EAAAR,MAAApD,KAAAqD,YAAA,IWyC+B7G,mBAAtCG,CAAwD2G,WClEjEkB,6MACF3G,MAAQ,CACJwB,MAAM,GACNR,QAAQ,MAGZsC,aAAe,SAACC,GACZG,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKL,EAAEC,OAAO1C,GAAKyC,EAAEC,OAAOC,WAIhCK,aAAe,SAACP,GACZA,EAAEQ,iBAEFL,EAAKrE,MAAMuH,cAAclD,EAAK1D,gFAGzB,IAAAkC,EAC0BC,KAAK9C,MAA7BkC,EADFW,EACEX,QAASsF,EADX3E,EACW2E,MAChB,OAFK3E,EACkB/C,KACZkB,IAGPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOiC,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAEjDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,mBACA7E,EAAAC,EAAAC,cAAA,YAAUX,KAAK,OAAOY,UAAU,uBAAwBqB,GAAG,UAAUsD,SAAUjC,KAAKmB,gBAExFhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAGN8B,EAAUjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAf,6BAA4EH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAIrB,EAAMmB,UAAU,8CAA1B,gBAAkG,KACxLoH,EAAQvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCAAsC0C,KAAK9C,MAAMwH,MAAMC,SAAgB,MAnBhFxH,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAInB,WApBjB+D,aAmDdzD,cANS,SAAEkB,GAAF,MAAY,CAChC6G,MAAY7G,EAAMuB,QAAQsF,MAC1BtF,QAAYvB,EAAMuB,QAAQA,QAC1BpC,KAAYa,EAAMG,SAAShB,OAGS,CAACyH,cClDZ,SAACrF,GAAD,sBAAAtC,EAAA2E,OAAAW,EAAA,EAAAX,CAAAY,EAAAjF,EAAAkF,KAAa,SAAAuB,EAAOpH,EAAUI,EAAjBsF,GAAA,IAAA4B,EAAAzD,EAAA5C,EAAAkH,EAAA,OAAAvC,EAAAjF,EAAAqF,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAAAT,EAA4BpF,YAAagH,EAAzC5B,EAAyC4B,aACzEzD,EAAYyD,IACZrG,EAAUb,IAAWmB,SAASN,QAC9BkH,EAAW/H,IAAWmB,SAAShB,KAAKkB,IAC1CJ,QAAQC,IAAIlB,KAEZyD,EAAUG,WAAW,YAAYoE,IAAjCpD,OAAAqD,EAAA,EAAArD,CAAA,GACOrC,EADP,CAEIE,gBAAiB5B,EAAQ6F,UACzBhE,eAAgB7B,EAAQ8F,SACxBoB,WACApF,UAAW,IAAIuF,QAChB9H,KAAK,SAAC+H,GACLlH,QAAQC,IAAIiH,GAEZvI,EAAS,CACLC,KZvBkB,iBYwBlBuI,QAAS7F,MAEd0D,MAAM,SAACC,GAENtG,EAAS,CACLC,KZ5B0B,uBY6B1BqG,UAvB8B,wBAAAiB,EAAAhB,SAAAa,EAAA7D,SAAb,gBAAAkD,EAAAC,EAAAkB,GAAA,OAAAvH,EAAAsG,MAAApD,KAAAqD,YAAA,KDkDd1G,CAA0C6H,YEzDnDU,EAAY,GAoCHC,EAlCK,WAA+B,IAA9BtH,EAA8BwF,UAAA+B,OAAA,QAAAC,IAAAhC,UAAA,GAAAA,UAAA,GAAtB6B,EAAWI,EAAWjC,UAAA+B,OAAA,EAAA/B,UAAA,QAAAgC,EAC/C,OAAQC,EAAO5I,MACX,IbCsB,caClB,OADAoB,QAAQC,IAAI,cAAeuH,EAAOvC,KAC3BtB,OAAAqD,EAAA,EAAArD,CAAA,GACA5D,EADP,CAEIiE,UAAWwD,EAAOvC,IAAI4B,UAE9B,IbJwB,mBaKpB,OAAOlD,OAAAqD,EAAA,EAAArD,CAAA,GACA5D,EADP,CAEIiE,UAAW,OAEnB,IbXsB,gBaalB,OADAhE,QAAQC,IAAI,iBACL0D,OAAAqD,EAAA,EAAArD,CAAA,GACA5D,EADP,CAEIiE,UAAW,OAEnB,IbZsB,iBaalB,OAAAL,OAAAqD,EAAA,EAAArD,CAAA,GACO5D,EADP,CAEIiE,UAAW,OAEnB,IbhBsB,eaiBlB,OAAAL,OAAAqD,EAAA,EAAArD,CAAA,GACO5D,EADP,CAEIiE,UAAWwD,EAAOvC,IAAI4B,UAE9B,QACI,OAAO9G,aChCbqH,EAAY,CACdvF,SAAU,IA2BC4F,GAxBQ,WAA8B,IAA7B1H,EAA6BwF,UAAA+B,OAAA,QAAAC,IAAAhC,UAAA,GAAAA,UAAA,GAAtB6B,EAAWI,EAAWjC,UAAA+B,OAAA,EAAA/B,UAAA,QAAAgC,EACjD,OAAQC,EAAO5I,MACX,IdRoB,ecShB,OAAA+E,OAAAqD,EAAA,EAAArD,CAAA,GACO5D,EADP,CAEI8B,SAAU2F,EAAOL,UAEzB,IdXsB,iBcYlB,OAAAxD,OAAAqD,EAAA,EAAArD,CAAA,GACO5D,EADP,CAEIuB,QAASkG,EAAOL,QAChBtF,SAAS8B,OAAA+D,EAAA,EAAA/D,CAAK5D,EAAM8B,UAAZC,OAAA,CAAsB0F,EAAOL,YAE7C,IdhB8B,uBcgB9B,IAAAQ,EAC8BH,EAAOvC,IAA9B2C,EADPD,EACOC,KAAMhC,EADb+B,EACa/B,KAAMiB,EADnBc,EACmBd,QACf,OAAOlD,OAAAqD,EAAA,EAAArD,CAAA,GACA5D,EADP,CAEI6G,MAAO,CAACgB,OAAMhC,OAAMiB,aAE5B,QACI,OAAO9G,aCTJ8H,GAPKC,YAAgB,CAChC5I,KAAMmI,EACN/F,QAASmG,GACTjF,UAAWuF,oBACX7H,SAAU8H,sDCCZ9H,KAAS+H,cAVE,CACTC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,iBAKrBrI,KAASsC,YAAYgG,SAAS,CAC1BC,uBAAuB,IAGZvI,UAAf,ECLIwI,GAAa,CAACC,IAAMC,kBAAkB,CAAC3J,0BAAagH,gCAc3C4C,GATDC,YAAYjB,GAHL,GAIbtF,YACQwG,IAAezD,WAAf,EAAmBoD,IACnBM,6BAAmBC,GAAS,CAACC,wBAAwB,EAAMC,YAAa,QAAQC,mBAAoB,IACpGC,0BAAeJ,IACfK,OAAOC,8BAAgCD,OAAOC,iCCmD/CC,8MA1DbzJ,MAAQ,CACN0J,aAAa,KASfC,WAAa,WACX,OAAMjG,EAAK1D,MAAM0J,YAoBbpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,gCArBVH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqK,SAAP,KACEtK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,KACAvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsK,EAAD,MACAxK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACIzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,EAAaC,UAAWnI,IAC3C3C,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,EAAuBC,UAAWC,IACrD/K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,EAAgBC,UAAWjH,IAC9C7D,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,EAAgBC,UAAW3E,IAC9CnG,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,EAAuBC,UAAWzD,4FApB/C,IAAA2D,EAAAnI,KAClBA,KAAKoI,4BAA6BzB,GAAM0B,oBAAoBpL,KAAK,WAC/DkL,EAAK3G,SAAS,CACZ+F,aAAa,qDAuCjBvH,KAAKoI,+DAGL,OACEjL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAU3B,MAAOA,IAEb3G,KAAKwH,qBApDGpH,aCLEmI,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAAS5H,MACvB,2DCZN6H,IAASC,OAAOxL,EAAAC,EAAAC,cAACuL,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhM,KAAK,SAAAiM,GACjCA,EAAaC","file":"static/js/main.3096e282.chunk.js","sourcesContent":["export const HOME = '/';\r\nexport const PROJECT_DETAIL = '/project/:id';\r\nexport const SIGN_IN    =   '/signin';\r\nexport const SIGN_UP    =   '/signup';\r\nexport const PROJECT_CREATE ='/create';","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR, CLEAR_AUTH_ERROR } from \"./types\";\r\n\r\nexport const signIn = ( credentials ) =>  async (dispatch, getState,{getFirebase}) =>{\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n    )\r\n    .then( () => {\r\n        dispatch({type: LOGIN_SUCCESS})\r\n    } )\r\n    .catch((err) => {\r\n        dispatch({type: LOGIN_ERROR, err})\r\n    })\r\n}\r\n\r\nexport const signOut = ( ) => (dispatch, getState, {getFirebase}) =>{\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut()\r\n    .then( () => {\r\n        dispatch({\r\n            type:SIGNOUT_SUCCESS\r\n        })\r\n    })\r\n}\r\n\r\nexport const clearAuthErrror = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_AUTH_ERROR\r\n    })\r\n}\r\nexport const signUp = (newUser) => async (dispatch, getState, {getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore= getFirestore();\r\n\r\n    await firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email,\r\n        newUser.password\r\n    )\r\n    .then((resp) => {\r\n        return  firestore.collection('users').doc(resp.user.uid).set({\r\n            firstName: newUser.firstName,\r\n            lastName:   newUser.lastName,\r\n            initials:   newUser.firstName[0] + newUser.lastName[0]\r\n        })\r\n    })\r\n    .then(() => {\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS\r\n        })\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n          type: SIGNUP_ERROR,\r\n          err\r\n      })  \r\n    });\r\n}","export const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\r\nexport const CREATE_PROJECT_ERROR   = 'CREATE_PROJECT_ERROR';\r\nexport const UPDATE_PROJECT         = 'UPDATE_PROJECT';\r\n\r\nexport const LOGIN_SUCCESS  = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR    = 'LOGIN_ERROR';\r\nexport const CLEAR_AUTH_ERROR = 'CLEAR_AUTH_ERROR';\r\nexport const SIGNOUT_SUCCESS= 'SIGNOUT_SUCCESS';\r\n\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR   = 'SIGNUP_ERROR';","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport { PROJECT_CREATE, HOME } from '../../constants/routes';\r\n\r\n//Redux \r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to={PROJECT_CREATE}>New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to={HOME} className=\"btn btn-floating pink lighten-1\">\r\n                {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {signOut}) (SignedInLinks);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport { SIGN_UP, SIGN_IN } from '../../constants/routes';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to={SIGN_UP}>Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to={SIGN_IN}>Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { HOME } from '../../constants/routes';\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile}  = props;\r\n\r\n    const isAuth = (auth.uid);\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to={HOME} className=\"brand-logo\">MarioPlan</Link>\r\n            </div>\r\n            {isAuth ? \r\n            <SignedInLinks profile={profile}/> :\r\n            <SignedOutLinks />}\r\n       </nav>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps( state ) {\r\n    \r\n    console.log('navbar',state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, null) (Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                       {notifications && notifications.map(item => {\r\n                           return (\r\n                               <li key={item.id}>\r\n                                  <span className=\"pink-text\">{item.user}</span>  \r\n                                  <br/>\r\n                                  <span>{item.content}</span>\r\n                                  <br/>\r\n                                  <div className=\"grey-text note-date\">\r\n                                  {moment(item.time.toDate()).zone('America/Managua').fromNow()}\r\n                                  </div>\r\n                               </li>\r\n                           )\r\n                           })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = (props) => {\r\n    const {project} = props;\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).zone('America/Managua').calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = (props) => {\r\n    const {projects} = props;\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                console.log(project);\r\n                \r\n                return (\r\n                        <Link key={project.id} to={`/project/${project.id}`}>\r\n                            <ProjectSummary project={project}  />\r\n                        </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n//Firestore\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { SIGN_IN } from '../../constants/routes';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        projects: []\r\n    }\r\n    render() {\r\n        const {projects, auth, notifications} = this.props;\r\n        if ( !auth.uid ) return <Redirect to={SIGN_IN} />\r\n        \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1 bg-dark\"> \r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        notifications:state.firestore.ordered.notifications,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, null),\r\n    firestoreConnect([\r\n        {collection:'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 4, orderBy: ['time','desc']}\r\n    ])\r\n) (Dashboard);","import React from 'react';\r\nimport {Redirect}  from 'react-router-dom'\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\nimport {compose}    from 'redux';\r\n//Firebase\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { SIGN_IN } from '../../constants/routes';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props)=>{\r\n        const {project, auth} = props;\r\n\r\n        if ( !auth.uid ) return <Redirect to={SIGN_IN}></Redirect>\r\n\r\n        if ( project ) {\r\n\r\n            return ( <div className=\"container section project-details\">\r\n                        <div className=\"card z-depth-0\">\r\n                            <div className=\"card-content\">\r\n                                <span className=\"card-title\">{project.title}</span>\r\n                                <p>{ project.content }</p>\r\n                            </div>\r\n                            <div className=\"card-action grey lighten-4 grey-text\">\r\n                                <div>Posted by {project.authorFirstName} {project.authorLastName }</div>\r\n                                <div>{moment(project.createdAt.toDate()).zone('America/Managua').calendar()}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>  )\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"container center\">\r\n                    <p>Loading Project...</p>\r\n                </div>\r\n            );\r\n        }\r\n};\r\n\r\nconst mapstateToProps = ( state, ownProps ) => {\r\n    console.log('state',state);\r\n    const id        = ownProps.match.params.id;\r\n    const projects  = state.firestore.data.projects;\r\n    console.log(projects);\r\n    const project   = projects ?  projects[id] : null;\r\n    \r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapstateToProps, null),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\nimport {signIn, clearAuthErrror} from '../../store/actions/authActions'\r\nimport { HOME } from '../../constants/routes';\r\n\r\nclass SignIn extends Component {\r\n    state   = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        console.log('handleSubmit');\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearAuthErrror();\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n\r\n        if ( auth.uid ) return <Redirect to={HOME} />\r\n        return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\"  id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                </div>\r\n                <div className=\"card red darken-3 center py-10\">\r\n                     {authError ? <p className=\"white-text\">{authError}</p> : null }\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {signIn, clearAuthErrror})(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\nimport { HOME } from '../../constants/routes';\r\nimport {signUp as signUpAction,clearAuthErrror} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state   = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        console.log('handleSubmit');\r\n        \r\n        this.props.signUpAction(this.state)\r\n        e.preventDefault();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearAuthErrror();\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if ( auth.uid ) return <Redirect to={HOME} />\r\n        return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\"  id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">Firstname</label>\r\n                    <input type=\"text\" name=\"firstName\" onChange={this.handleChange} id=\"firstName\"/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastname\">LastName</label>\r\n                    <input type=\"text\" name=\"lastName\" onChange={this.handleChange} id=\"lastName\"/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p>{authError}</p> : null}\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{signUpAction,clearAuthErrror})(SignUp);\r\n","import React, { Component } from 'react'\r\nimport {Redirect, Link} from 'react-router-dom'\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { SIGN_IN, HOME } from '../../constants/routes';\r\n\r\nclass CreateProjects extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.createProject(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {project, error, auth} = this.props;\r\n        if ( !auth.uid ) return <Redirect to={SIGN_IN} />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea type=\"text\" className=\"materialize-textarea\"  id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n                { project ? <div className=\"card-panel white-text light-blue\">Proyecto Creado con exito <Link to={HOME} className=\"waves-effect waves-light btn grey darken-1\">Ir a Inicio</Link></div> : null} \r\n                { error ? <div className=\"card-panel white-text red darken-3\">{this.props.error.message}</div>: null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state )=>({\r\n    error:      state.project.error,\r\n    project:    state.project.project,\r\n    auth:       state.firebase.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProject})(CreateProjects);","import {GET_PROJECTS, CREATE_PROJECT, CREATE_PROJECT_ERROR} from './types'\r\n\r\nexport const getAllProjects = ( ) => async dispatch => {\r\n    \r\n    dispatch({\r\n        type: GET_PROJECTS\r\n    })\r\n}\r\n\r\nexport const createProject = (project) => async (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    console.log(getState());\r\n    \r\n    firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId,\r\n        createdAt: new Date()\r\n    }).then((result) => {\r\n        console.log(result);\r\n        \r\n        dispatch({\r\n            type: CREATE_PROJECT,\r\n            payload: project\r\n        })\r\n    }).catch((err) => {\r\n        \r\n        dispatch({\r\n            type: CREATE_PROJECT_ERROR,\r\n            err\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport const updateProject = (project) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        \r\n    })\r\n}","import { LOGIN_ERROR, LOGIN_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR, CLEAR_AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch( action.type ) {\r\n        case LOGIN_ERROR:\r\n            console.log('login error', action.err);\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case CLEAR_AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            console.log('Login success');\r\n            return {\r\n                ...state, \r\n                authError: null\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case SIGNUP_ERROR:\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { GET_PROJECTS, CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../actions/types\";\r\n\r\nconst initState = {\r\n    projects: []\r\n};\r\n\r\nconst projectReducer = (state =initState, action) => {\r\n    switch( action.type ) {\r\n        case GET_PROJECTS:\r\n            return{\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n        case CREATE_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload,\r\n                projects: [...state.projects, action.payload]\r\n            }\r\n        case CREATE_PROJECT_ERROR:\r\n        const {code, name, message} = action.err;\r\n            return {\r\n                ...state,\r\n                error: {code, name, message}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\n//Redux\r\nimport {combineReducers} from 'redux';\r\n\r\n//Firebase\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCLnmXJ38LCFlXisbouCI_aomsppStC7gw\",\r\n    authDomain: \"netninja-reactjs-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://netninja-reactjs-marioplan.firebaseio.com\",\r\n    projectId: \"netninja-reactjs-marioplan\",\r\n    storageBucket: \"netninja-reactjs-marioplan.appspot.com\",\r\n    messagingSenderId: \"801748613933\"\r\n  };\r\n\r\n\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({\r\n      timestampsInSnapshots: true\r\n  })\r\n\r\n  export default firebase;","//Redux\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n//Firebase\r\nimport { reduxFirestore, getFirestore} from 'redux-firestore';\r\nimport { reactReduxFirebase,getFirebase} from 'react-redux-firebase'\r\nimport fbConfig         from '../config/fbConfig'\r\n\r\n//Default redux\r\n// retorna dispatch  & getState\r\n// const middleWare = [thunk];\r\n\r\n//agregar parametros extras al middleware, \r\nconst middleWare = [thunk.withExtraArgument({getFirebase, getFirestore})];\r\n\r\nconst initialState = {};\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, \r\n        compose(\r\n                applyMiddleware(...middleWare),\r\n                reactReduxFirebase(fbConfig,{useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady : true}),\r\n                reduxFirestore(fbConfig),\r\n                window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n)\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport Navbar from './components/layouts/Navbar';\r\nimport './index.css'\r\n//Router\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Dashboard from './components/dashborard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProjects from './components/projects/CreateProjects';\r\nimport * as routes from './constants/routes'\r\n\r\n//Redux\r\nimport store from './store/Store'\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    loadingAuth: true\r\n  }\r\n  componentDidMount() {\r\n    this.unSubscribeAuthStateChanged= store.firebaseAuthIsReady.then(() => {\r\n      this.setState({\r\n        loadingAuth: false\r\n      })\r\n    })\r\n  }\r\n  renderPage = () => {\r\n    if ( !this.state.loadingAuth ) {\r\n\r\n      return  (\r\n        <React.Fragment>\r\n          <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path={routes.HOME} component={Dashboard}/>\r\n                <Route exact path={routes.PROJECT_DETAIL} component={ProjectDetails} />\r\n                <Route exact path={routes.SIGN_IN} component={SignIn} />\r\n                <Route exact path={routes.SIGN_UP} component={SignUp} />\r\n                <Route exact path={routes.PROJECT_CREATE} component={CreateProjects} />\r\n            </Switch>\r\n          </div>\r\n          </BrowserRouter>\r\n        </React.Fragment>\r\n        )\r\n    } else {\r\n      return (\r\n        <div className=\"App container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m12 px12\">\r\n                <div className=\"card white center\">\r\n                  <span className=\"card-title\">Loading Firebase Auth...</span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillUnmount( ) {\r\n    this.unSubscribeAuthStateChanged()\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        {\r\n          this.renderPage()\r\n        }\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}